/*
 * Copyright (c) 2020-2021 Stefan Sundin (4pplet)
 * Copyright (c) 2021 Megamind (megamind4089)
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
/ {
    model = "CYBER60";
    compatible = "cyber60";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    vbatt {
        compatible = "zmk,battery-voltage-divider";
        label = "BATTERY";
        io-channels = <&adc 1>;
        output-ohms = <2000000>;
        full-ohms = <(1000000 + 2000000)>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
    };

    // Override gpios config in board revision if required
    encoder: encoder_1 {
        compatible = "alps,ec11";
        label = "ENCODER";
        a-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <2>;
    };

    // Override gpios config in board revision if required
    leds {
        compatible = "gpio-leds";
        led_0: led_green {
            gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
            label = "Green LED";
            status = "okay";
        };
        led_1: led_red {
            gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
            label = "Red LED";
            status = "okay";
        };
        led_2: led_blue {
            gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;
            label = "Blue LED";
            status = "okay";
        };
    };

    // Override pwms config in board revision if required
    pwmleds {
        compatible = "pwm-leds";
        pwm_led_0: pwm_led_green {
            pwms = <&pwm0 28>;
            label = "Green PWM LED";
            status = "okay";
        };
        pwm_led_1: pwm_led_red {
            pwms = <&pwm0 2>;
            label = "Red PWM LED";
            status = "okay";
        };
        pwm_led_2: pwm_led_blue {
            pwms = <&pwm0 4>;
            label = "Blue PWM LED";
            status = "okay";
        };
    };

    // PWM buzzer config
    buzzer: pwm_buzzer {
        compatible = "pwm-buzzer";
        label = "PWM BUZZER";
        // Override in board revision if required
        pwms = <&pwm0 29>;
        status = "okay";
    };

    /* These aliases are provided for compatibility with samples */
    aliases {
        ledgreen = &led_0;
        ledred   = &led_1;
        ledblue  = &led_2;
        pwmledgreen = &pwm_led_0;
        pwmledred = &pwm_led_1;
        pwmledblue = &pwm_led_2;
		buzzer = &buzzer;
    };

    ext-power {
        compatible = "zmk,ext-power-generic";
        label = "EXT_POWER";
        control-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
    };
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        row-gpios = <&gpio0 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        col-gpios = <&gpio0 13  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
    };
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&adc {
    status = "okay";
};

&usbd {
    status = "okay";
};

&pwm0 {
    status = "okay";
};

&spi0 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    // Underglow data: P0.31
    // Override in board revision if required
    mosi-pin = <31>;
    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
    sck-pin = <6>;
    miso-pin = <8>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
    };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "softdevice";
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            label = "code_partition";
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            label = "storage";
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};
