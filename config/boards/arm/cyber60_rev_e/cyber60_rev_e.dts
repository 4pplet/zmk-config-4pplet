/*
 * Copyright (c) 2025 Stefan Sundin (4pplet)
 *
 * SPDX-License-Identifier: MIT
 */

/*
 * Currently not implemented:
 * BQ24075 Charge status (inverted logic): P1.13 
 * BQ24075 Power good (inverted logic): P0.06
 * Conected directly with a series 10k resistor
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/led/led.h>
#include "cyber60_rev_e-pinctrl.dtsi"
#include "cyber60_rev_e-layouts.dtsi"
#include "cyber60_rev_e-transforms.dtsi"

/ {
	model = "CYBER60_REV_E";
	compatible = "cyber60", "Rev_E";

	chosen {       
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,kscan = &kscan0;
        zmk,underglow = &led_strip;
		zmk,battery = &fuelgauge;
		zmk,studio-rpc-uart = &cdc_acm_uart;
	};

	sensors {
    	compatible = "zmk,keymap-sensors";
    	sensors = <&encoder>;
	};

	encoder: encoder_1 {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // P0.24
        b-gpios = <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // P0.13
        //resolution = <2>;
    };

    buzzer: pwm_buzzer {
        compatible = "pwm-buzzer";
		pwms = <&pwm0 0 1000 PWM_POLARITY_NORMAL>;
		//set status = "okay" to enable the buzzer
		status = "disabled";
		//status = "okay";
    };

	leds {
			compatible = "gpio-leds";
			led_0: led_green { // P0.15
				gpios = <&gpio0 15 GPIO_ACTIVE_LOW>;
				status = "okay";
			};
			led_1: led_red { // P0.17
				gpios = <&gpio0 17 GPIO_ACTIVE_LOW>;
				status = "okay";
			};
			led_2: led_blue { // P0.12
				gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
				status = "okay";
			};
		};

	aliases {
		ledgreen = &led_0;
		ledred   = &led_1;
		ledblue  = &led_2;
		buzzer = &buzzer;
	};

	ext-power {
		compatible = "zmk,ext-power-generic";
		control-gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>; // P0.30
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		wakeup-source;
		diode-direction = "col2row";
		row-gpios
			= <&gpio0 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
		col-gpios
			= <&gpio1 10  GPIO_ACTIVE_HIGH>
			, <&gpio0 3  GPIO_ACTIVE_HIGH>
			, <&gpio0 4  GPIO_ACTIVE_HIGH>
			, <&gpio0 28 GPIO_ACTIVE_HIGH>
			, <&gpio1 6 GPIO_ACTIVE_HIGH>
			, <&gpio0 10  GPIO_ACTIVE_HIGH>
			, <&gpio1 2 GPIO_ACTIVE_HIGH>
			;
	};
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&pinctrl {
       i2c0_default: i2c0_default {
               group1 {
                       psels = <NRF_PSEL(TWIM_SDA, 0, 5)>,
                               <NRF_PSEL(TWIM_SCL, 1, 9)>;
               };
       };

       i2c0_sleep: i2c0_sleep {
               group1 {
                       psels = <NRF_PSEL(TWIM_SDA, 0, 5)>,
                               <NRF_PSEL(TWIM_SCL, 1, 9)>;
                       low-power-enable;
               };
       };
};

&i2c0 {
    status = "okay";
    compatible = "nordic,nrf-twim";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <100000>;

    fuelgauge: max17048@36 {
		compatible = "zmk,maxim-max17048";
		reg = <0x36>;
		};
};

&adc {
	status = "okay";
};

zephyr_udc0: &usbd {
    status = "okay";
};

&usbd {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
        label = "CDC_ACM_0";
    };
};

&pwm0 {
    status = "okay";    
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";
	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";
		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;
		/* WS2812 */
		chain-length = <16>; /* LED strip length */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};